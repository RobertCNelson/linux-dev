From 64ef573601c405735c7373b2ac055a16c289a7a5 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Mon, 6 Apr 2020 13:55:48 -0500
Subject: [PATCH 102/103] cleanup brcmfmac patchset

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 .../broadcom/brcm80211/brcmfmac/bus.h         |  3 --
 .../broadcom/brcm80211/brcmfmac/fwsignal.c    | 45 -------------------
 .../broadcom/brcm80211/brcmfmac/sdio.c        |  3 --
 .../broadcom/brcm80211/brcmfmac/usb.c         |  7 ---
 4 files changed, 58 deletions(-)

diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bus.h b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bus.h
index 9e765c26f3c1..e62c34849b4c 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bus.h
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bus.h
@@ -152,9 +152,6 @@ struct brcmf_bus {
 
 	const struct brcmf_bus_ops *ops;
 	struct brcmf_bus_msgbuf *msgbuf;
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-	bool allow_skborphan;
-#endif
 };
 
 /*
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c
index ce8d2ee00659..23575351763c 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c
@@ -496,9 +496,6 @@ struct brcmf_fws_info {
 	bool creditmap_received;
 	u8 mode;
 	bool avoid_queueing;
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-	int fifo_init_credit[BRCMF_FWS_FIFO_COUNT];
-#endif
 };
 
 /*
@@ -1632,9 +1629,6 @@ static int brcmf_fws_notify_credit_map(struct brcmf_if *ifp,
 		WARN_ONCE(fws->fifo_credit[i] < 0,
 			  "fifo_credit[%d] is negative(%d)\n", i,
 			  fws->fifo_credit[i]);
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-		fws->fifo_init_credit[i] = fws->fifo_credit[i];
-#endif
 	}
 	brcmf_fws_schedule_deq(fws);
 	brcmf_fws_unlock(fws);
@@ -2213,38 +2207,6 @@ void brcmf_fws_del_interface(struct brcmf_if *ifp)
 	brcmf_fws_unlock(fws);
 }
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-static bool brcmf_fws_ismultistream(struct brcmf_fws_info *fws)
-{
-	bool ret = false;
-	u8 credit_usage = 0;
-
-	/* Check only for BE, VI and VO traffic */
-	u32 delay_map = fws->fifo_delay_map &
-		((1 << BRCMF_FWS_FIFO_AC_BE) |
-		 (1 << BRCMF_FWS_FIFO_AC_VI) |
-		 (1 << BRCMF_FWS_FIFO_AC_VO));
-
-	if (hweight_long(delay_map) > 1) {
-		ret = true;
-	} else {
-		if (fws->fifo_credit[BRCMF_FWS_FIFO_AC_BE] <
-			fws->fifo_init_credit[BRCMF_FWS_FIFO_AC_BE])
-			credit_usage++;
-		if (fws->fifo_credit[BRCMF_FWS_FIFO_AC_VI] <
-			fws->fifo_init_credit[BRCMF_FWS_FIFO_AC_VI])
-			credit_usage++;
-		if (fws->fifo_credit[BRCMF_FWS_FIFO_AC_VO] <
-			fws->fifo_init_credit[BRCMF_FWS_FIFO_AC_VO])
-			credit_usage++;
-
-		if (credit_usage > 1)
-			ret = true;
-	}
-	return ret;
-}
-#endif
-
 static void brcmf_fws_dequeue_worker(struct work_struct *worker)
 {
 	struct brcmf_fws_info *fws;
@@ -2258,13 +2220,6 @@ static void brcmf_fws_dequeue_worker(struct work_struct *worker)
 	fws = container_of(worker, struct brcmf_fws_info, fws_dequeue_work);
 	drvr = fws->drvr;
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-	if (brcmf_fws_ismultistream(fws))
-		drvr->bus_if->allow_skborphan = false;
-	else
-		drvr->bus_if->allow_skborphan = true;
-#endif
-
 	brcmf_fws_lock(fws);
 	for (fifo = BRCMF_FWS_FIFO_BCMC; fifo >= 0 && !fws->bus_flow_blocked;
 	     fifo--) {
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
index ff28c39cd6e2..790d65bafe1b 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
@@ -2349,9 +2349,6 @@ static uint brcmf_sdio_sendfromq(struct brcmf_sdio *bus, uint maxframes)
 					      &prec_out);
 			if (pkt == NULL)
 				break;
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-			skb_orphan(pkt);
-#endif
 			__skb_queue_tail(&pktq, pkt);
 		}
 		spin_unlock_bh(&bus->txq_lock);
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c
index f85414338827..8c61f0ee4ca1 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c
@@ -638,10 +638,6 @@ static int brcmf_usb_tx(struct device *dev, struct sk_buff *skb)
 		goto fail;
 	}
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-	if (devinfo->bus_pub.bus->allow_skborphan)
-		skb_orphan(skb);
-#endif
 	req->skb = skb;
 	req->devinfo = devinfo;
 	usb_fill_bulk_urb(req->urb, devinfo->usbdev, devinfo->tx_pipe,
@@ -1289,9 +1285,6 @@ static int brcmf_usb_probe_cb(struct brcmf_usbdev_info *devinfo)
 	bus->ops = &brcmf_usb_bus_ops;
 	bus->proto_type = BRCMF_PROTO_BCDC;
 	bus->always_use_fws_queue = true;
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 16, 0))
-	bus->allow_skborphan = true;
-#endif
 #ifdef CONFIG_PM
 	bus->wowl_supported = true;
 #endif
-- 
2.25.1

